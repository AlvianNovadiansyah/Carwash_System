/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ApplicationProject;

import java.awt.event.MouseAdapter;
import java.awt.event.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author novad
 */
public class BookingMenu extends javax.swing.JFrame {

    /**
     * Creates new form BookingMenu
     */
    String BookingID = "";
    String JenisKendaraan = "";
    String NamaPelanggan = "";
    String NomorTelepon = "";
    String AlamatPelanggan = "";
    String Member = "";
    String MemberID = "";
    int harga = 0;
    String SectionID = "";
    String Status = "";
    String TanggalPencucian = "";
    
 
    
    public BookingMenu() {
        initComponents();
        displayData();
        setTitle("Booking Menu");
        setLocationRelativeTo(null);
        
        BookingTable.addMouseListener(new MouseAdapter(){
            DefaultTableModel model = new DefaultTableModel();
            
            @Override
            public void mouseClicked(MouseEvent e){
                int i = BookingTable.getSelectedRow();
                BookingID = (BookingTable.getValueAt(i, 0).toString());
                JenisKendaraan = (BookingTable.getValueAt(i, 1).toString());
                NamaPelanggan =(BookingTable.getValueAt(i, 2).toString());
                NomorTelepon = (BookingTable.getValueAt(i, 3).toString());
                AlamatPelanggan = (BookingTable.getValueAt(i, 4).toString());
                Member = (BookingTable.getValueAt(i, 5).toString());
                MemberID = (BookingTable.getValueAt(i, 6).toString());
                harga = (int) (BookingTable.getValueAt(i, 7));
                SectionID = (BookingTable.getValueAt(i, 8).toString());
                Status = (BookingTable.getValueAt(i, 9).toString());
                TanggalPencucian = (BookingTable.getValueAt(i, 10).toString());
            }
        });
    }
    
    private void displayData() {
      Connection con = Koneksi.koneksi();
      try {
         Statement stmt = con.createStatement();
         ResultSet rs = stmt.executeQuery("SELECT * FROM carwash_booking");
         DefaultTableModel model = new DefaultTableModel();
         model.addColumn("Booking ID");
         model.addColumn("Jenis Kendaraan");
         model.addColumn("Nama Pelanggan");
         model.addColumn("Nomor Telepon");
         model.addColumn("Alamat Pelanggan");
         model.addColumn("Member");
         model.addColumn("Member ID");
         model.addColumn("Harga");
         model.addColumn("Section ID");
         model.addColumn("Status");
         model.addColumn("Tanggal Pencucian");
         SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
         while (rs.next()) {
            String id = rs.getString("Booking_ID");
            String jenis = rs.getString("Jenis_Kendaraan");
            String Nama = rs.getString("Nama_Pelanggan");
            String Nomor = rs.getString("Nomor_Telepone");
            String Alamat = rs.getString("Alamat_Pelanggan");
            String MemberST = rs.getString("Member");
            String Memberid = rs.getString("ID_Member");
            int Harga = rs.getInt("Harga");
            String sectionid = rs.getString("Section_ID");
            String StatusPen = rs.getString("Status");
            Timestamp datePen = rs.getTimestamp("Tanggal_Pencucian");
            String TanggalPen = dateFormat.format(datePen);
            model.addRow(new Object[]{id, jenis, Nama, Nomor, Alamat, MemberST, Memberid, 
            Harga, sectionid, StatusPen, TanggalPen});
         }
         BookingTable.setModel(model);
         if(stmt != null){
             stmt.close();
         }
      } catch (SQLException e) {
         System.out.println(e);
      } finally {
          Koneksi.closeConnection();
      }
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BookingLabel1 = new javax.swing.JLabel();
        BookingLabel2 = new javax.swing.JLabel();
        LogOutBooking = new javax.swing.JButton();
        KembaliBooking = new javax.swing.JButton();
        ScrollPaneBooking = new javax.swing.JScrollPane();
        BookingTable = new javax.swing.JTable();
        EditBooking = new javax.swing.JButton();
        SimpanBooking = new javax.swing.JButton();
        HapusBooking = new javax.swing.JButton();
        ResetBooking = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        BookingIDinput = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JenisKinput = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        NamaPelinput = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        NomorTelinput = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        AlamatPelinput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        MemberStinput = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        MemberIdinput = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        Hargainput = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        SectionIdinput = new javax.swing.JTextField();
        Statusinput = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        GetdataBooking = new javax.swing.JButton();
        dateTimePickerPenc = new com.github.lgooddatepicker.components.DateTimePicker();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 51, 255));
        jPanel1.setToolTipText("");

        BookingLabel1.setText("BOOKING");
        BookingLabel1.setBackground(new java.awt.Color(255, 255, 255));
        BookingLabel1.setFont(new java.awt.Font("Times New Roman", 3, 28)); // NOI18N
        BookingLabel1.setForeground(new java.awt.Color(255, 255, 255));

        BookingLabel2.setText("MENU");
        BookingLabel2.setBackground(new java.awt.Color(255, 255, 255));
        BookingLabel2.setFont(new java.awt.Font("Times New Roman", 3, 28)); // NOI18N
        BookingLabel2.setForeground(new java.awt.Color(255, 255, 255));

        LogOutBooking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ApplicationProject/R__1_-removebg-preview (1).png"))); // NOI18N
        LogOutBooking.setText("LogOut");
        LogOutBooking.setBackground(new java.awt.Color(153, 51, 255));
        LogOutBooking.setBorder(null);
        LogOutBooking.setContentAreaFilled(false);
        LogOutBooking.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        LogOutBooking.setForeground(new java.awt.Color(255, 255, 255));
        LogOutBooking.setIconTextGap(8);
        LogOutBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutBookingActionPerformed(evt);
            }
        });

        KembaliBooking.setBackground(new java.awt.Color(153, 51, 255));
        KembaliBooking.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        KembaliBooking.setForeground(new java.awt.Color(255, 255, 255));
        KembaliBooking.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ApplicationProject/R.png"))); // NOI18N
        KembaliBooking.setText("Kembali");
        KembaliBooking.setBorder(null);
        KembaliBooking.setContentAreaFilled(false);
        KembaliBooking.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        KembaliBooking.setIconTextGap(8);
        KembaliBooking.setMaximumSize(new java.awt.Dimension(1095, 990));
        KembaliBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KembaliBookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(KembaliBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(541, 541, 541)
                        .addComponent(BookingLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(523, 523, 523)
                        .addComponent(BookingLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(LogOutBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(BookingLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BookingLabel2))
                    .addComponent(KembaliBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LogOutBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        BookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Jenis Kendaraan", "Nama Pelanggan", "Nomor Telepon", "Alamat", "Member", "Member ID", "Harga", "Section ID", "Status", "Tanggal Pencucian"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ScrollPaneBooking.setViewportView(BookingTable);

        EditBooking.setText("Edit");
        EditBooking.setBackground(new java.awt.Color(0, 0, 255));
        EditBooking.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        EditBooking.setForeground(new java.awt.Color(255, 255, 255));
        EditBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBookingActionPerformed(evt);
            }
        });

        SimpanBooking.setText("Simpan");
        SimpanBooking.setBackground(new java.awt.Color(0, 0, 255));
        SimpanBooking.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        SimpanBooking.setForeground(new java.awt.Color(255, 255, 255));
        SimpanBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SimpanBookingActionPerformed(evt);
            }
        });

        HapusBooking.setText("Hapus");
        HapusBooking.setBackground(new java.awt.Color(204, 204, 204));
        HapusBooking.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        HapusBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusBookingActionPerformed(evt);
            }
        });

        ResetBooking.setText("Reset");
        ResetBooking.setBackground(new java.awt.Color(204, 204, 204));
        ResetBooking.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        ResetBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetBookingActionPerformed(evt);
            }
        });

        jLabel3.setText("Booking ID");

        BookingIDinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BookingIDinputActionPerformed(evt);
            }
        });

        jLabel4.setText("Jenis Kendaraan");

        JenisKinput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mobil", "Motor" }));
        JenisKinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisKinputActionPerformed(evt);
            }
        });

        jLabel5.setText("Nama Pelanggan");

        jLabel6.setText("Nomor Telepon");

        jLabel7.setText("Alamat");

        jLabel8.setText("Member");

        MemberStinput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ada", "Tidak Ada" }));
        MemberStinput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MemberStinputActionPerformed(evt);
            }
        });

        jLabel9.setText("Member ID");

        jLabel10.setText("Harga");

        jLabel11.setText("Section ID");

        jLabel12.setText("Status");

        jLabel13.setText("Tanggal ");

        GetdataBooking.setText("Get Data");
        GetdataBooking.setBackground(new java.awt.Color(0, 0, 255));
        GetdataBooking.setFont(new java.awt.Font("Arial", 1, 20)); // NOI18N
        GetdataBooking.setForeground(new java.awt.Color(255, 255, 255));
        GetdataBooking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetdataBookingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(SimpanBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(GetdataBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(EditBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(HapusBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addComponent(ResetBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ScrollPaneBooking)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookingIDinput, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JenisKinput, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(NamaPelinput, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                            .addComponent(NomorTelinput))
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(MemberStinput, 0, 180, Short.MAX_VALUE)
                            .addComponent(AlamatPelinput))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(Hargainput, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addComponent(MemberIdinput))
                            .addComponent(jLabel10))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(Statusinput, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(SectionIdinput, javax.swing.GroupLayout.Alignment.LEADING)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dateTimePickerPenc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))))
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookingIDinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NamaPelinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AlamatPelinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MemberIdinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SectionIdinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(dateTimePickerPenc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JenisKinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NomorTelinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MemberStinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hargainput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Statusinput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(ScrollPaneBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(GetdataBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(EditBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(HapusBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ResetBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(SimpanBooking, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EditBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBookingActionPerformed
        // TODO add your handling code here:
        Connection con = Koneksi.koneksi();
        if (evt.getSource() == EditBooking) {
            String id = BookingIDinput.getText();
            String jenis = JenisKinput.getSelectedItem().toString();
            String nama = NamaPelinput.getText();
            String telepon = NomorTelinput.getText();
            String alamat = AlamatPelinput.getText();
            String member = MemberStinput.getSelectedItem().toString();
            String idmember = MemberIdinput.getText();
            int hargapotong = Integer.parseInt(Hargainput.getText());
            if(member.equalsIgnoreCase("Ada")){
                hargapotong = hargapotong - (hargapotong * 15/100);
            }
            String idsection = SectionIdinput.getText();
            String status = Statusinput.getText();
            LocalDateTime localwaktu = dateTimePickerPenc.getDateTimePermissive();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String formattedDateTime = localwaktu.format(formatter);
            try{
                PreparedStatement st = con.prepareStatement("UPDATE carwash_booking SET Booking_ID=?, Jenis_Kendaraan=?, "
                        + "Nama_Pelanggan=?, Nomor_Telepone=?, Alamat_Pelanggan=?, Member=?, "
                        + "ID_Member=?, Harga=?, Section_ID=?, Status=?, Tanggal_Pencucian=?  "
                        + "WHERE Booking_ID=?");
                st.setString(1, id);
                st.setString(2, jenis);
                st.setString(3, nama);
                st.setString(4, telepon);
                st.setString(5, alamat);
                st.setString(6, member);
                st.setString(7, idmember);
                st.setInt(8, hargapotong);
                st.setString(9, idsection);
                st.setString(10, status);
                st.setString(11, formattedDateTime);
                st.setString(12, id);
                
                st.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data inserted successfully!", "Insert Success", JOptionPane.INFORMATION_MESSAGE);
                if(st != null){
                   st.close(); 
                }
            } catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                Koneksi.closeConnection();
            }
            
            displayData();
            BookingIDinput.setText("");
            JenisKinput.setSelectedIndex(0);
            NamaPelinput.setText("");
            NomorTelinput.setText("");
            AlamatPelinput.setText("");
            MemberStinput.setSelectedIndex(0);
            MemberIdinput.setText("");
            Hargainput.setText("");
            SectionIdinput.setText("");
            Statusinput.setText("");
            dateTimePickerPenc.clear();
        }
    }//GEN-LAST:event_EditBookingActionPerformed

    private void SimpanBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SimpanBookingActionPerformed
        // TODO add your handling code here:
        Connection con = Koneksi.koneksi();
        if (evt.getSource() == SimpanBooking) {
            String id = BookingIDinput.getText();
            String jenis = JenisKinput.getSelectedItem().toString();
            String nama = NamaPelinput.getText();
            String telepon = NomorTelinput.getText();
            String alamat = AlamatPelinput.getText();
            String member = MemberStinput.getSelectedItem().toString();
            String idmember = MemberIdinput.getText();
            int hargapotong = Integer.parseInt(Hargainput.getText());
            if(member.equalsIgnoreCase("Ada")){
                hargapotong = hargapotong - (hargapotong * 15/100);
            }
            String idsection = SectionIdinput.getText();
            String status = Statusinput.getText();
            LocalDateTime localwaktu = dateTimePickerPenc.getDateTimePermissive();
            DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
            String formattedDateTime = localwaktu.format(formatter);
            try{
                PreparedStatement st = con.prepareStatement("INSERT INTO carwash_booking(Booking_ID, Jenis_Kendaraan, "
                        + "Nama_Pelanggan, Nomor_Telepone, Alamat_Pelanggan, Member, "
                        + "ID_Member, Harga, Section_ID, Status, Tanggal_Pencucian) "
                        + "VALUES(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                st.setString(1, id);
                st.setString(2, jenis);
                st.setString(3, nama);
                st.setString(4, telepon);
                st.setString(5, alamat);
                st.setString(6, member);
                st.setString(7, idmember);
                st.setInt(8, hargapotong);
                st.setString(9, idsection);
                st.setString(10, status);
                st.setString(11, formattedDateTime);
                
                st.executeUpdate();
                
                JOptionPane.showMessageDialog(null, "Data inserted successfully!", "Insert Success", JOptionPane.INFORMATION_MESSAGE);
                if(st != null){
                   st.close(); 
                }
            } catch(SQLException ex){
                 JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage(), "Insert Error", JOptionPane.ERROR_MESSAGE);
            } finally {
                Koneksi.closeConnection();
            }
            
            displayData();
            BookingIDinput.setText("");
            JenisKinput.setSelectedIndex(0);
            NamaPelinput.setText("");
            NomorTelinput.setText("");
            AlamatPelinput.setText("");
            MemberStinput.setSelectedIndex(0);
            MemberIdinput.setText("");
            Hargainput.setText("");
            SectionIdinput.setText("");
            Statusinput.setText("");
            dateTimePickerPenc.clear();
        }
    }//GEN-LAST:event_SimpanBookingActionPerformed

    private void HapusBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusBookingActionPerformed
        // TODO add your handling code here:
        Connection con = Koneksi.koneksi();
        try{
            PreparedStatement stmt = con.prepareStatement("DELETE FROM carwash_booking WHERE Booking_ID = ?");
            stmt.setString(1, BookingID);
            int rowDelete = stmt.executeUpdate();
            if(rowDelete > 0){
                JOptionPane.showMessageDialog(null, "Row deleted successfully.");
            } else {
            JOptionPane.showMessageDialog(null, "Row not found.");
            }
            if(stmt != null){
                stmt.close();
            }
        } catch(SQLException ex){
             JOptionPane.showMessageDialog(null, "Error deleting row: " + ex.getMessage());
        } finally{
            Koneksi.closeConnection();
        }
        
        displayData();
        BookingIDinput.setText("");
        JenisKinput.setSelectedIndex(0);
        NamaPelinput.setText("");
        NomorTelinput.setText("");
        AlamatPelinput.setText("");
        MemberStinput.setSelectedIndex(0);
        MemberIdinput.setText("");
        Hargainput.setText("");
        SectionIdinput.setText("");
        Statusinput.setText("");
        dateTimePickerPenc.clear();
        
    }//GEN-LAST:event_HapusBookingActionPerformed

    private void ResetBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetBookingActionPerformed
        // TODO add your handling code here:
        Connection con = Koneksi.koneksi();
        try{
            Statement smt = con.createStatement();
            smt.executeUpdate("DELETE FROM carwash_booking");
            
            if(smt != null){
               smt.close(); 
            }
            if(con != null){
                Koneksi.closeConnection();
            }
             JOptionPane.showMessageDialog(null, "All data has been deleted.");
        } catch(SQLException ex){
        }
        
        displayData();
    }//GEN-LAST:event_ResetBookingActionPerformed

    private void BookingIDinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BookingIDinputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_BookingIDinputActionPerformed

    private void JenisKinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisKinputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JenisKinputActionPerformed

    private void MemberStinputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MemberStinputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_MemberStinputActionPerformed

    private void KembaliBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KembaliBookingActionPerformed
        // TODO add your handling code here:
        new MainMenu().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_KembaliBookingActionPerformed

    private void LogOutBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutBookingActionPerformed
        // TODO add your handling code here:
        new LoginFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_LogOutBookingActionPerformed

    private void GetdataBookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetdataBookingActionPerformed
        // TODO add your handling code here:
        BookingIDinput.setText(BookingID);
        if(JenisKendaraan.equalsIgnoreCase("Mobil")){
            JenisKinput.setSelectedIndex(0);
        } else if(JenisKendaraan.equalsIgnoreCase("Motor")){
            JenisKinput.setSelectedIndex(1);
        }
        NamaPelinput.setText(NamaPelanggan);
        NomorTelinput.setText(NomorTelepon);
        AlamatPelinput.setText(AlamatPelanggan);
        if(Member.equalsIgnoreCase("Ada")){
            MemberStinput.setSelectedIndex(0);
        }else if(Member.equalsIgnoreCase("Tidak Ada")){
            MemberStinput.setSelectedIndex(1);
        }
        MemberIdinput.setText(MemberID);
        String Hargaedit = String.valueOf(harga);
        Hargainput.setText(Hargaedit);
        SectionIdinput.setText(SectionID);
        Statusinput.setText(Status);
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        LocalDateTime dateTime = LocalDateTime.parse(TanggalPencucian, formatter);
        dateTimePickerPenc.setDateTimePermissive(dateTime);
        
    }//GEN-LAST:event_GetdataBookingActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookingMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BookingMenu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AlamatPelinput;
    private javax.swing.JTextField BookingIDinput;
    private javax.swing.JLabel BookingLabel1;
    private javax.swing.JLabel BookingLabel2;
    private javax.swing.JTable BookingTable;
    private javax.swing.JButton EditBooking;
    private javax.swing.JButton GetdataBooking;
    private javax.swing.JButton HapusBooking;
    private javax.swing.JTextField Hargainput;
    private javax.swing.JComboBox<String> JenisKinput;
    private javax.swing.JButton KembaliBooking;
    private javax.swing.JButton LogOutBooking;
    private javax.swing.JTextField MemberIdinput;
    private javax.swing.JComboBox<String> MemberStinput;
    private javax.swing.JTextField NamaPelinput;
    private javax.swing.JTextField NomorTelinput;
    private javax.swing.JButton ResetBooking;
    private javax.swing.JScrollPane ScrollPaneBooking;
    private javax.swing.JTextField SectionIdinput;
    private javax.swing.JButton SimpanBooking;
    private javax.swing.JTextField Statusinput;
    private com.github.lgooddatepicker.components.DateTimePicker dateTimePickerPenc;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
